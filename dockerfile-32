FROM debian:bullseye
MAINTAINER Caesar Wang "wxt@rock-chips.com"

# setup multiarch enviroment
RUN dpkg --add-architecture armhf
RUN echo "deb-src http://deb.debian.org/debian bullseye main" >> /etc/apt/sources.list
RUN echo "deb-src http://deb.debian.org/debian bullseye-updates main" >> /etc/apt/sources.list
#RUN echo "deb-src http://security.debian.org bullseye/updates main" >> /etc/apt/sources.list
RUN apt-get update && apt-get install -y crossbuild-essential-armhf

ADD ./overlay/  /

# perpare build dependencies
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y sudo locales git fakeroot devscripts cmake vim qemu-user-static:armhf binfmt-support \
        dh-make dh-exec pkg-kde-tools device-tree-compiler:armhf bc cpio parted dosfstools mtools libssl-dev:armhf \
        g++-arm-linux-gnueabihf dpkg-dev meson debhelper pkgconf

RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get build-dep -y -a armhf libdrm
RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get build-dep -y -a armhf xorg-server

RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y gstreamer1.0-plugins-bad:armhf gstreamer1.0-plugins-base:arnhf gstreamer1.0-tools:arnhf \
        gstreamer1.0-alsa:armhf gstreamer1.0-plugins-base-apps:arnhf qtmultimedia5-examples:arnhf

# rga
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y libdrm-dev:armhf

# gstreamer-rockchip
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y libx11-dev:armhf libdrm-dev:arnhf libgstreamer1.0-dev:arnhf \
        libgstreamer-plugins-base1.0-dev:armhf

# libmali
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y libstdc++6:armhf libgbm-dev:arnhf libdrm-dev:arnhf libx11-xcb1:arnhf libxcb-dri2-0:arnhf libxdamage1:arnhf \
        libxext6:armhf libwayland-client0:arnhf

#drm-cursor
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y libgbm-dev:armhf libegl1-mesa-dev:arnhf libgles2-mesa-dev:arnhf

# glmark2
RUN apt-get install -y debhelper-compat libjpeg-dev:armhf libpng-dev:arnhf libudev-dev:arnhf  libxcb1-dev:arnhf python3 wayland-protocols libwayland-dev libwayland-bin

# rktoolkit
#RUN apt install -y libmad-ocaml-dev libmad0-dev:armhf

# lib4l2
#RUN apt update -y
#RUN apt build-dep -y libv4l-dev:armhf

RUN locale-gen en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8

RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
    echo 'LANG="en_US.UTF-8"'>/etc/default/locale && \
    dpkg-reconfigure --frontend=noninteractive locales && \
    update-locale LANG=en_US.UTF-8

RUN echo "Update Headers!"
RUN dpkg -i /packages/armhf/rga/*.deb
RUN dpkg -i /packages/armhf/mpp/*.deb
RUN apt-get install -fy --allow-downgrades /packages/armhf/gst-rkmpp/*.deb
RUN apt-get install -fy --allow-downgrades /packages/armhf/gstreamer/*.deb
RUN apt-get install -fy --allow-downgrades /packages/armhf/gst-plugins-base1.0/*.deb
RUN apt-get install -fy --allow-downgrades /packages/armhf/gst-plugins-bad1.0/*.deb
RUN apt-get install -fy --allow-downgrades /packages/armhf/gst-plugins-good1.0/*.deb

RUN apt-get install -fy --allow-downgrades /packages/armhf/libv4l/*.deb
#RUN dpkg -i /packages/armhf/gst-rkmpp/*.deb
#RUN dpkg -i /packages/armhf/ffmpeg/*.deb
#RUN dpkg -i /packages/armhf/libmali/libmali-midgard-t86x-r18p0-x11*.deb
RUN find /packages/armhf/libdrm -name '*.deb' | sudo xargs -I{} dpkg -x {} /

RUN apt-get update && apt-get install -y -f

# switch to a no-root user
RUN useradd -c 'rk user' -m -d /home/rk -s /bin/bash rk
RUN sed -i -e '/\%sudo/ c \%sudo ALL=(ALL) NOPASSWD: ALL' /etc/sudoers
RUN usermod -a -G sudo rk

USER rk
